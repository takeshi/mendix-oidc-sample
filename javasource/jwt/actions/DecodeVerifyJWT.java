// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jwt.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import jwt.usecases.JWTDecoder;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Decodes a JWT string into a JWT object and verifies the signature. Throws an exception when the token could not be decoded or verified.
 */
public class DecodeVerifyJWT extends CustomJavaAction<IMendixObject>
{
	private java.lang.String token;
	private java.lang.String secret;
	private jwt.proxies.ENU_Algorithm algorithm;
	private IMendixObject __claimsToVerify;
	private jwt.proxies.JWT claimsToVerify;
	private IMendixObject __publicKey;
	private jwt.proxies.JWTRSAPublicKey publicKey;
	private java.lang.Long leeway;

	public DecodeVerifyJWT(IContext context, java.lang.String token, java.lang.String secret, java.lang.String algorithm, IMendixObject claimsToVerify, IMendixObject publicKey, java.lang.Long leeway)
	{
		super(context);
		this.token = token;
		this.secret = secret;
		this.algorithm = algorithm == null ? null : jwt.proxies.ENU_Algorithm.valueOf(algorithm);
		this.__claimsToVerify = claimsToVerify;
		this.__publicKey = publicKey;
		this.leeway = leeway;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.claimsToVerify = this.__claimsToVerify == null ? null : jwt.proxies.JWT.initialize(getContext(), __claimsToVerify);

		this.publicKey = this.__publicKey == null ? null : jwt.proxies.JWTRSAPublicKey.initialize(getContext(), __publicKey);

		// BEGIN USER CODE
		JWTDecoder jwtDecoder = new JWTDecoder(this.context(), token);
		IMendixObject decodedJWT = jwtDecoder.verifyAndDecodeToObject(secret, algorithm, claimsToVerify, publicKey, leeway);
		return decodedJWT;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "DecodeVerifyJWT";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
